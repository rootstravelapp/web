<script>

    var restOfTheData=function(){
        var dataset = [
            { name: 'Strategic Ecosystem Development', percent: 40 },
            { name: 'Token Sale', percent: 20.5 },
            { name: 'Post Token Sale', percent: 9.50 },
            { name: 'Advisors', percent: 2 },
            { name: 'Bounty', percent: 2 },
            { name: 'Cofounders & Team', percent: 17 },
            { name: 'Future Projects', percent: 9 },
        ];
         
        var pie=d3.layout.pie()
          .value(function(d){return d.percent})
          .sort(null)
          .padAngle(.03);
         
        var w=400,h=800;
        var innerRadius=100;
        if(document.body.clientWidth < 400){
            w=document.body.clientWidth - 50;
            h=2*w;
            innerRadius=w/2-80;
         }
         
        var outerRadius=w/2;
         
        var color = d3.scale.category10();
         
        var arc=d3.svg.arc()
            .outerRadius(outerRadius)
            .innerRadius(innerRadius);
         
        d3.select(".token svg").remove();

        var pieSvg=d3.select(".token")
            .append("svg")
            .attr({
              width:w,
              height:h,
              margin: "10px",
              class:'shadow'
            })
            .append('g')
            .attr({
                transform:'translate('+w/2+','+h/4+')'
            })

        var path=pieSvg.selectAll('path')
                        .data(pie(dataset))
                        .enter()
                        .append('path')
                        .attr({
                            d:arc,
                            fill:function(d,i){
                                return color(d.data.name);
                            }
                        });
         
        path.transition()
            .duration(1000)
            .attrTween('d', function(d) {
                var interpolate = d3.interpolate({startAngle: 0, endAngle: 0}, d);
                return function(t) {
                    return arc(interpolate(t));
                };
            });

        var text=pieSvg.selectAll('text')
            .data(pie(dataset))
            .enter()
            .append("text")
            .transition()
            .duration(200)
            .attr("transform", function (d) {
                return "translate(" + arc.centroid(d) + ")";
            })
            .attr("dy", ".4em")
            .attr("text-anchor", "middle")
            .text(function(d){
                return d.data.percent+"%";
            })
            .style({
                fill:'#fff',
                'font-size':'20px'
            });

        var legendRectSize=20;
        var legendSpacing=7;
        var legendHeight=legendRectSize+legendSpacing;


        var legend=pieSvg.selectAll('.legend')
            .data(color.domain())
            .enter()
            .append('g')
            .attr({
                class:'legend',
                transform:function(d,i){
                    //Just a calculation for x & y position
                    return 'translate(-135,' + ((i*legendHeight)+220) + ')';
                }
            });
            legend.append('rect')
            .attr({
                width:legendRectSize,
                height:legendRectSize,
                rx:0,
                ry:0
            })
            .style({
                fill:color,
                stroke:color
            });

        legend.append('text')
            .attr({
                x:30,
                y:15
            })
            .text(function(d){
                return d;
            }).style({
                fill:'#FFF',
                'font-size':'16px'
        });
    };

 
    
    setTimeout(restOfTheData,1000);
</script>